needs "compute.hl";;

let print_db fmt (db : db) =
  match db with
  | End_db -> Format.fprintf fmt "End_db"
  | Need_arg _ -> Format.fprintf fmt "Need_arg ..."
  | Try _ -> Format.fprintf fmt "Try {...}";;

#install_printer print_db;;

#remove_printer print_db;;

rws_of (bool_compset());;

let rewrites = from_list [ARITH];;
cbv_wk (initial_state rewrites `(\n m. SUC n) 0`);;

#trace cbv_wk;;
#trace cbv_up;;
#trace reduce_cst;;
#trace inst_rw;;
#trace mk_clos;;
#untrace reduce_cst;;
#untrace_all;;

let th = List.nth (BODY_CONJUNCTS ARITH_SUC) 1;;
let rewrites = from_list [lazyfy_thm OR_CLAUSES];;
let state = initial_state rewrites `F \/ (y = y)`;;
cbv_wk state;;

